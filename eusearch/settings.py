"""
Django settings for eusearch project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_elasticsearch_dsl',
    'search',
    'rest_framework',
    'haystack'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'eusearch.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'eusearch.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

API_KEY = os.environ.get('encoded_api_key')
CLOUD_ID = os.environ.get('CLOUD_ID')
ELASTIC_USER = os.environ.get('ELASTIC_USER')
ELASTIC_PASSWORD = os.environ.get('ELASTIC_PASSWORD')
HOST_ES = os.environ.get("host_es")

# Settings for Elasticsearch
ELASTICSEARCH_DSL={
    'default': {
        'hosts': 'https://euinforetrieval.es.europe-west2.gcp.elastic-cloud.com:9243',
        'sniff_on_start': True,
        'cloud_id': CLOUD_ID,
        'user': ELASTIC_USER,
        'password': ELASTIC_PASSWORD,
        'api_key': API_KEY
    }   
}

# manage.py runserver

# You need to run this command every time you change your index settings.
# manage.py makemigrations
# manage.py migrate
# python manage.py migrate --run-syncdb
# Delete all indices in Elasticsearch or only the indices associate with a model (--models [app[.model])
# manage.py search_index --delete
# manage.py search_index --rebuild
# python manage.py load_data

# delete db.sqlite3
# sqlite3  db.sqlite3
# .tables
# python manage.py dbshell 

# clears migration history
# python manage.py migrate --fake core zero
# python manage.py migrate --fake-initial

# python manage.py collectstatic

# manage.py update_index

# when we create a new model, we first need to run makemigrations -> migrate and that instantiates the new table
# then we can run manage,py load_data

# for haystack
# manage.py clear_index, rebuild_index

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 25
}

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# Static files (CSS, JavaScript, Images)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATIC_URL = '/static/'
MEDIA_URL = '/images/'

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'search', 'static'),
# ]

# HAYSTACK_DOCUMENT_FIELD = 'content'
# HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# print('HOST_ES is', ELASTIC_USER)
HAYSTACK_CONNECTIONS = {
    'default': {
        # 'ENGINE': 'haystack.backends.elasticsearch7_backend.Elasticsearch7SearchEngine',
        'ENGINE': 'haystack.backends.elasticsearch_backend.ElasticsearchSearchEngine',
        # 'URL': HOST_ES,
        'URL': 'https://euinforetrieval.es.europe-west2.gcp.elastic-cloud.com:9243',
        'INDEX_NAME': 'eu-questions-index-embeddings',
        'CLOUD_ID': CLOUD_ID,
        'API_KEY': API_KEY,
        'KWARGS': {
            'port': '9243',
            'http_auth': (ELASTIC_USER, ELASTIC_PASSWORD),
            'scheme':'https',
            'use_ssl': True,
            'verify_certs': False,
            'similarity':'cosine',
        }
    },
}